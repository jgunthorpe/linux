/*
 * Copyright (c) 2018, Mellanox Technologies inc.  All rights reserved.
 *
 * This software is available to you under a choice of one of two
 * licenses.  You may choose to be licensed under the terms of the GNU
 * General Public License (GPL) Version 2, available from the file
 * COPYING in the main directory of this source tree, or the
 * OpenIB.org BSD license below:
 *
 *     Redistribution and use in source and binary forms, with or
 *     without modification, are permitted provided that the following
 *     conditions are met:
 *
 *      - Redistributions of source code must retain the above
 *        copyright notice, this list of conditions and the following
 *        disclaimer.
 *
 *      - Redistributions in binary form must reproduce the above
 *        copyright notice, this list of conditions and the following
 *        disclaimer in the documentation and/or other materials
 *        provided with the distribution.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#if !defined(IB_USER_IOCTL_CMDS_H) || defined(UVERBS_HDR_MODE)
#define IB_USER_IOCTL_CMDS_H

/* This is a multi-include header. To reprocess the specifications the
 * 'includer caller' should set UVERBS_HDR_MODE and define the macro set as
 * desired. By default including this header will construct the enum constant
 * values and other basic information.
 */
#ifndef UVERBS_HDR_MODE
#include "ib_user_ioctl_decls.h"

#define UVERBS_ID_NS_MASK 0xF000
#define UVERBS_ID_NS_SHIFT 12

#define UVERBS_UDATA_DRIVER_DATA_NS	1
#define UVERBS_UDATA_DRIVER_DATA_FLAG	(1UL << UVERBS_ID_NS_SHIFT)

enum {
	UVERBS_ATTR_UHW_IN = UVERBS_UDATA_DRIVER_DATA_FLAG,
	UVERBS_ATTR_UHW_OUT,
};
#endif

EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_AH, 6)
EMPTY_UVERBS_FD_OBJECT(UVERBS_OBJECT_COMP_CHANNEL, 2)
EMPTY_UVERBS_NULL_OBJECT(UVERBS_OBJECT_DEVICE, 0)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_FLOW, 9)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_MR, 7)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_MW, 8)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_PD, 1)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_QP, 4)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_RWQ_IND_TBL, 11)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_SRQ, 5)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_WQ, 12)
EMPTY_UVERBS_OBJECT(UVERBS_OBJECT_XRCD, 10)

DECLARE_ENUM(uverbs_flow_action_esp_keymat,
	     UVERBS_ENUM_PTR_IN(IB_UVERBS_FLOW_ACTION_ESP_KEYMAT_AES_GCM,
				UVERBS_ATTR_TYPE(struct ib_uverbs_flow_action_esp_keymat_aes_gcm),
				UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)))

DECLARE_ENUM(uverbs_flow_action_esp_replay,
	     UVERBS_ENUM_PTR_IN(IB_UVERBS_FLOW_ACTION_ESP_REPLAY_NONE,
				/* No need to specify any data */
				.len = 0),
	     UVERBS_ENUM_PTR_IN(IB_UVERBS_FLOW_ACTION_ESP_REPLAY_BMP,
				UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp_replay_bmp, size),
				UA_FLAGS(UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)))

/* --------------------------------------------------------------- */
START_UVERBS_OBJECT(UVERBS_OBJECT_CQ, 3)

DECLARE_UVERBS_LEGACY_METHOD(UVERBS_METHOD_CQ_CREATE, 0,
	UVERBS_ATTR_IDR(UVERBS_ATTR_CREATE_CQ_HANDLE, UVERBS_OBJECT_CQ,
			UVERBS_ACCESS_NEW,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_CQE,
			   UVERBS_ATTR_TYPE(__u32),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_USER_HANDLE,
			   UVERBS_ATTR_TYPE(__u64),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_FD(UVERBS_ATTR_CREATE_CQ_COMP_CHANNEL,
		       UVERBS_OBJECT_COMP_CHANNEL,
		       UVERBS_ACCESS_READ),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_COMP_VECTOR, UVERBS_ATTR_TYPE(__u32),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_CREATE_CQ_FLAGS, UVERBS_ATTR_TYPE(__u32)),
	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_CREATE_CQ_RESP_CQE, UVERBS_ATTR_TYPE(__u32),
			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

DECLARE_UVERBS_LEGACY_METHOD(UVERBS_METHOD_CQ_DESTROY, 1,
	UVERBS_ATTR_IDR(UVERBS_ATTR_DESTROY_CQ_HANDLE, UVERBS_OBJECT_CQ,
			UVERBS_ACCESS_DESTROY,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_DESTROY_CQ_RESP,
			    UVERBS_ATTR_TYPE(struct ib_uverbs_destroy_cq_resp),
			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

END_UVERBS_OBJECT(UVERBS_OBJECT_CQ)

/* --------------------------------------------------------------- */
START_UVERBS_OBJECT(UVERBS_OBJECT_DM, 14)

DECLARE_UVERBS_METHOD(UVERBS_METHOD_DM_ALLOC, 0,
	UVERBS_ATTR_IDR(UVERBS_ATTR_ALLOC_DM_HANDLE, UVERBS_OBJECT_DM,
			UVERBS_ACCESS_NEW,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_ALLOC_DM_LENGTH,
			   UVERBS_ATTR_TYPE(__u64),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_ALLOC_DM_ALIGNMENT,
			   UVERBS_ATTR_TYPE(__u32),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

DECLARE_UVERBS_METHOD_DESTROY(UVERBS_METHOD_DM_FREE, 1,
	UVERBS_ATTR_IDR(UVERBS_ATTR_FREE_DM_HANDLE,
			UVERBS_OBJECT_DM,
			UVERBS_ACCESS_DESTROY,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

DECLARE_UVERBS_METHOD(UVERBS_METHOD_DM_MR_REG, 0,
	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_HANDLE, UVERBS_OBJECT_MR,
			UVERBS_ACCESS_NEW,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_OFFSET,
			   UVERBS_ATTR_TYPE(__u64),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_LENGTH,
			   UVERBS_ATTR_TYPE(__u64),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_PD_HANDLE, UVERBS_OBJECT_PD,
			UVERBS_ACCESS_READ,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_REG_DM_MR_ACCESS_FLAGS,
			   UVERBS_ATTR_TYPE(__u32),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_IDR(UVERBS_ATTR_REG_DM_MR_DM_HANDLE, UVERBS_OBJECT_DM,
			UVERBS_ACCESS_READ,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_REG_DM_MR_RESP_LKEY,
			    UVERBS_ATTR_TYPE(__u32),
			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_OUT(UVERBS_ATTR_REG_DM_MR_RESP_RKEY,
			    UVERBS_ATTR_TYPE(__u32),
			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

END_UVERBS_OBJECT(UVERBS_OBJECT_DM)

/* --------------------------------------------------------------- */
START_UVERBS_OBJECT(UVERBS_OBJECT_FLOW_ACTION, 13)

DECLARE_UVERBS_METHOD(UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, 0,
	UVERBS_ATTR_IDR(UVERBS_ATTR_CREATE_FLOW_ACTION_ESP_HANDLE, UVERBS_OBJECT_FLOW_ACTION,
			UVERBS_ACCESS_NEW,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ATTRS,
			   UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp, hard_limit_pkts),
			   UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY |
				    UVERBS_ATTR_SPEC_F_MIN_SZ_OR_ZERO)),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ESN, UVERBS_ATTR_TYPE(__u32)),
	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_KEYMAT,
			    uverbs_flow_action_esp_keymat,
			    UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_ENUM_IN(UVERBS_ATTR_FLOW_ACTION_ESP_REPLAY,
			    uverbs_flow_action_esp_replay),
	UVERBS_ATTR_PTR_IN(UVERBS_ATTR_FLOW_ACTION_ESP_ENCAP,
			    UVERBS_ATTR_STRUCT(struct ib_uverbs_flow_action_esp_encap, type)))

DECLARE_UVERBS_METHOD_DESTROY(UVERBS_METHOD_FLOW_ACTION_DESTROY, 1,
	UVERBS_ATTR_IDR(UVERBS_ATTR_DESTROY_FLOW_ACTION_HANDLE,
			UVERBS_OBJECT_FLOW_ACTION,
			UVERBS_ACCESS_DESTROY,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)))

DECLARE_UVERBS_METHOD(UVERBS_METHOD_FLOW_ACTION_ESP_MODIFY, 2,
	UVERBS_ATTR_IDR(UVERBS_ATTR_MODIFY_FLOW_ACTION_ESP_HANDLE, UVERBS_OBJECT_FLOW_ACTION,
			UVERBS_ACCESS_WRITE,
			UA_FLAGS(UVERBS_ATTR_SPEC_F_MANDATORY)),
	UVERBS_ATTR_COPY(UVERBS_ATTR_FLOW_ACTION_ESP_ATTRS, 0),
	UVERBS_ATTR_COPY(UVERBS_ATTR_FLOW_ACTION_ESP_ESN, 0),
	UVERBS_ATTR_COPY(UVERBS_ATTR_FLOW_ACTION_ESP_KEYMAT, 0),
	UVERBS_ATTR_COPY(UVERBS_ATTR_FLOW_ACTION_ESP_REPLAY, 0),
        UVERBS_ATTR_COPY(UVERBS_ATTR_FLOW_ACTION_ESP_ENCAP, 0))

END_UVERBS_OBJECT(UVERBS_OBJECT_FLOW_ACTION)

#ifndef UVERBS_HDR_MODE
#include "ib_user_ioctl_decls.h"
#endif

#endif
